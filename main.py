import telebot
from telebot import types
import test_main
import time
import re
import os
import test2
import mysql.connector
from mysql.connector import Error


def create_connection(host_name, user_name, user_password, db_name):
    connection = None
    try:
        connection = mysql.connector.connect(
            host=host_name,
            user=user_name,
            passwd=user_password,
            database=db_name
        )
        print("Connection to MySQL DB successful")
    except Error as e:
        print(f"The error '{e}' occurred")

    return connection
connection = create_connection("localhost", "mysql", "mysql","history_list")

def execute_query(connection, query):
     cursor = connection.cursor()
     try:
         cursor.execute(query)
         connection.commit()
         print("Query executed successfully")
     except Error as e:
         print(f"The error '{e}' occurred")

def execute_read_query(connection, query):
    cursor = connection.cursor()
    result = None
    try:
        cursor.execute(query)
        result = cursor.fetchall()
        return result
    except Error as e:
        print("The error '{e}' occurred")

bot = telebot.TeleBot('—Ç–æ–∫–µ–Ω')



@bot.message_handler(commands=['start'])
def welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=False)
    item1 = types.KeyboardButton('üìñ–ü—Ä–æ—á–∏—Ç–∞—Ç—å –∏—Å—Ç–æ—Ä–∏–∏')
    item2 = types.KeyboardButton('üìö–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é')
    item3 = types.KeyboardButton('üë®‚Äçüîß–û —Å–æ–∑–¥–∞—Ç–µ–ª–µ')
    markup.add(item1,item2,item3)
    test2.create_userz(message.chat.id)
    gg = '–ü—Ä–∏–≤–µ—Ç, <b>' + message.from_user.first_name.title() + '</b>!\n–•–æ—á–µ—à—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –∫—Ä–∏–Ω–∂–æ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ —Å–µ–±—è –∏–ª–∏ —Å–≤–æ–µ–≥–æ –¥—Ä—É–≥–∞? –¢–æ–≥–¥–∞ —Ç–µ–±–µ –∫ –Ω–∞–º\n–ù—É —á—Ç–æ,–ø–æ–µ—Ö–∞–ª–∏?)üòè'.format(message.from_user, bot.get_me())
    bot.send_message(message.chat.id,gg,parse_mode='html',reply_markup=markup)
    bot.send_photo(message.chat.id, 'https://sun2.beltelecom-by-minsk.userapi.com/f0FkFdMP8XEOP54pAnoCSulnaqljjWJjoflD1w/48MQhmk4-5s.jpg')




@bot.message_handler(content_types=['text'])
def crypto_price_telegram(message):
    if message.chat.type == 'private':
        if message.text == 'üìñ–ü—Ä–æ—á–∏—Ç–∞—Ç—å –∏—Å—Ç–æ—Ä–∏–∏':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=False)
            item2 = types.KeyboardButton('–ù–∞–∑–∞–¥')
            item3 = types.KeyboardButton('–°–ª–µ–¥—É—é—â–∞—è –∏—Å—Ç–æ—Ä–∏—è')
            item4 = types.KeyboardButton('üëç–ü–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫')

            markup.add(item2,item3,item4)


            bot.send_message(message.chat.id, test2.hax[test2.now_is(message.chat.id)] ,reply_markup=markup)
        if message.text == '–°–ª–µ–¥—É—é—â–∞—è –∏—Å—Ç–æ—Ä–∏—è':
            if int(test2.now_is(message.chat.id)) == (test2.couunt() - 1):
                test2.update_zero(message.chat.id)
                bot.send_message(message.chat.id, test2.hax[test2.now_is(message.chat.id)])
            else :
                test2.update_now(message.chat.id)
                print(test2.now_is(message.chat.id))
                bot.send_message(message.chat.id, test2.hax[test2.now_is(message.chat.id)])
        if message.text == '–ù–∞–∑–∞–¥':
            welcome(message)
            test2.update_zero(message.chat.id)
        if message.text == 'üìö–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é':
            bot.send_message(message.chat.id, '–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç –∏ <b>–ø–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–µ–π –∫—É–ª —Å—Ç–æ—Ä–∏ —Å–æ –≤—Å–µ–º –º–∏—Ä–æ–º –∞–±–ª—Å–æ–ª—é—Ç–Ω–æ –∞–Ω–æ–Ω–∏–º–Ω–æ!</b>\n\nhttps://cutt.ly/LylMio5',parse_mode='html')

        if message.text == 'üë®‚Äçüîß–û —Å–æ–∑–¥–∞—Ç–µ–ª–µ':
            bot.send_message(message.chat.id, '–°–æ–∑–¥–∞—Ç–µ–ª—å - –Ø–∫—É–±–ª–µ–≤–∏—á –†–µ–Ω–∞—Ç\nGithub - https://github.com/RenatYakublevich\n–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ - https://vk.com/helloworldbastard')
        if message.text == 'üëç–ü–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫':
            test2.go_like(message.chat.id,test2.now_is(message.chat.id) + 1)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'like':

                test2.go_like(message.chat.id,test2.now_is(message.chat.id))
                # remove inline buttons
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ –∑–∞ —Ç–≤–æ—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!üòá",
                reply_markup=None)

    except Exception as e:
        print(repr(e))






bot.polling(none_stop=True)
